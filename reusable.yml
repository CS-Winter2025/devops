name: Reusable CI/CD Pipeline

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
      dotnet_version:
        required: true
        type: string
      project_path:
        required: true
        type: string
      unit_test_project_path:
        required: false
        type: string
        default: ""
      ui_test_project_path:
        required: false
        type: string
        default: ""
      run_unit_tests:
        required: false
        type: boolean
        default: false
      run_ui_tests:
        required: false
        type: boolean
        default: false
      run_static_analysis:
        required: false
        type: boolean
        default: false
    secrets: {} # Encrypted variables (e.g. API keys, Database credentials)

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # To accommodate both Linux and Windows environment

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet_version }}

      - name: Display OS Info
        run: |
          echo "Operating System: ${{ runner.os }}"
          dotnet --info

      - name: Restore dependencies
        run: dotnet restore ${{ inputs.project_path }}

      - name: Build application (${{ inputs.configuration }})
        run: dotnet build ${{ inputs.project_path }} -c ${{ inputs.configuration }} --no-restore

      # Conditional Unit Tests
      - name: Run Unit Tests
        if: ${{ inputs.run_unit_tests && inputs.unit_test_project_path != '' }}
        run: dotnet test ${{ inputs.unit_test_project_path }} --configuration ${{ inputs.configuration }} --no-build --verbosity normal

      # Conditional UI Tests
      - name: Run UI Tests
        if: ${{ inputs.run_ui_tests && inputs.ui_test_project_path != '' }}
        run: dotnet test ${{ inputs.ui_test_project_path }} --configuration ${{ inputs.configuration }} --no-build --verbosity normal

      # Conditional Static Analysis
      - name: Static Code Analysis (dotnet format)
        if: ${{ inputs.run_static_analysis }}
        run: dotnet format ${{ inputs.project_path }} --verify-no-changes

      # Publish Application
      - name: Publish application (${{ inputs.configuration }})
        run: dotnet publish ${{ inputs.project_path }} -c ${{ inputs.configuration }} -o ./publish-${{ inputs.configuration }}

      # Upload Artifact
      - name: Upload artifact (${{ inputs.configuration }})
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ inputs.configuration }}
          path: ./publish-${{ inputs.configuration }}
